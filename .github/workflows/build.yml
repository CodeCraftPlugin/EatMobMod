name: "Build Release"
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - { uses: actions/checkout@v2, with: { fetch-depth: 0 } }
      - {
        name: "Set up JDK 17",
        uses: actions/setup-java@v2,
        with: { distribution: "temurin", java-version: "17" },
      }
      - {
        name: "Build with Gradle",
        id: build,
        run: "chmod +x gradlew && ./gradlew build publish",
      }
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.ref }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/
          asset_name: eatmob.jar
          asset_content_type: application/zip
      - name: "Upload to CurseForge"
        uses: itsmeow/curseforge-upload@v3
        with:
          file_path: build/libs/
          game_endpoint: "minecraft"
          relations: "fabric-api:requiredDependency,registry-lib:requiredDependency"
          game_versions: "Minecraft 1.19:1.19.2,Java 17,Fabric,Client,Server"
          #project_id: "776090"
          token: "${{ secrets.CF_API_TOKEN }}"
          changelog: "${{ steps.build.outputs.changelog}}"
          changelog_type: "html"
          release_type: "release"
